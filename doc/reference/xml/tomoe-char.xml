<refentry id="TomoeChar">
<refmeta>
<refentrytitle role="top_of_page">TomoeChar</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TOMOE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TomoeChar</refname>
<refpurpose>An object of character data.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



#define             <link linkend="TOMOE-CHAR-PRIVATE-USE-AREA-START:CAPS">TOMOE_CHAR_PRIVATE_USE_AREA_START</link>
#define             <link linkend="TOMOE-CHAR-PRIVATE-USE-AREA-END:CAPS">TOMOE_CHAR_PRIVATE_USE_AREA_END</link>
                    <link linkend="TomoeChar-struct">TomoeChar</link>;
<link linkend="TomoeChar">TomoeChar</link>*          <link linkend="tomoe-char-new">tomoe_char_new</link>                      (void);
<link linkend="TomoeChar">TomoeChar</link>*          <link linkend="tomoe-char-new-from-xml-data">tomoe_char_new_from_xml_data</link>        (const <link linkend="gchar">gchar</link> *data,
                                                         <link linkend="gssize">gssize</link> len);
const <link linkend="gchar">gchar</link>*        <link linkend="tomoe-char-get-utf8">tomoe_char_get_utf8</link>                 (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="void">void</link>                <link linkend="tomoe-char-set-utf8">tomoe_char_set_utf8</link>                 (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="char">char</link> *utf8);
<link linkend="gint">gint</link>                <link linkend="tomoe-char-get-n-strokes">tomoe_char_get_n_strokes</link>            (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="void">void</link>                <link linkend="tomoe-char-set-n-strokes">tomoe_char_set_n_strokes</link>            (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="gint">gint</link> n_strokes);
const <link linkend="GList">GList</link>*        <link linkend="tomoe-char-get-readings">tomoe_char_get_readings</link>             (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="void">void</link>                <link linkend="tomoe-char-add-reading">tomoe_char_add_reading</link>              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="TomoeReading">TomoeReading</link> *reading);
const <link linkend="GList">GList</link>*        <link linkend="tomoe-char-get-radicals">tomoe_char_get_radicals</link>             (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="void">void</link>                <link linkend="tomoe-char-add-radical">tomoe_char_add_radical</link>              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *radical);
<link linkend="TomoeWriting">TomoeWriting</link>*       <link linkend="tomoe-char-get-writing">tomoe_char_get_writing</link>              (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="void">void</link>                <link linkend="tomoe-char-set-writing">tomoe_char_set_writing</link>              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="TomoeWriting">TomoeWriting</link> *writing);
const <link linkend="gchar">gchar</link>*        <link linkend="tomoe-char-get-variant">tomoe_char_get_variant</link>              (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="void">void</link>                <link linkend="tomoe-char-set-variant">tomoe_char_set_variant</link>              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *variant);
const <link linkend="gchar">gchar</link>*        <link linkend="tomoe-char-get-meta-data">tomoe_char_get_meta_data</link>            (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *key);
<link linkend="void">void</link>                <link linkend="tomoe-char-register-meta-data">tomoe_char_register_meta_data</link>       (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *value);
<link linkend="gboolean">gboolean</link>            <link linkend="tomoe-char-has-meta-data">tomoe_char_has_meta_data</link>            (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="void">void</link>                <link linkend="tomoe-char-meta-data-foreach">tomoe_char_meta_data_foreach</link>        (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="GHFunc">GHFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gint">gint</link>                <link linkend="tomoe-char-compare">tomoe_char_compare</link>                  (const <link linkend="TomoeChar">TomoeChar</link> *a,
                                                         const <link linkend="TomoeChar">TomoeChar</link> *b);
<link linkend="gchar">gchar</link>*              <link linkend="tomoe-char-to-xml">tomoe_char_to_xml</link>                   (<link linkend="TomoeChar">TomoeChar</link> *chr);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----TomoeChar
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="TomoeChar--n-strokes">n-strokes</link>&quot;                <link linkend="gint">gint</link>                  : Read / Write
  &quot;<link linkend="TomoeChar--utf8">utf8</link>&quot;                     <link linkend="gchararray">gchararray</link>            : Read / Write
  &quot;<link linkend="TomoeChar--variant">variant</link>&quot;                  <link linkend="gchararray">gchararray</link>            : Read / Write
  &quot;<link linkend="TomoeChar--writing">writing</link>&quot;                  <link linkend="TomoeWriting">TomoeWriting</link>          : Read / Write
</synopsis>
</refsect1>



<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="TOMOE-CHAR-PRIVATE-USE-AREA-START:CAPS" role="macro"/>TOMOE_CHAR_PRIVATE_USE_AREA_START</title>
<indexterm><primary>TOMOE_CHAR_PRIVATE_USE_AREA_START</primary></indexterm><programlisting>#define TOMOE_CHAR_PRIVATE_USE_AREA_START 0xE000
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TOMOE-CHAR-PRIVATE-USE-AREA-END:CAPS" role="macro"/>TOMOE_CHAR_PRIVATE_USE_AREA_END</title>
<indexterm><primary>TOMOE_CHAR_PRIVATE_USE_AREA_END</primary></indexterm><programlisting>#define TOMOE_CHAR_PRIVATE_USE_AREA_END   0xF8FF
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TomoeChar-struct" role="struct"/>TomoeChar</title>
<indexterm><primary>TomoeChar</primary></indexterm><programlisting>typedef struct _TomoeChar TomoeChar;</programlisting>
<para>
The <link linkend="TomoeChar"><type>TomoeChar</type></link> struct contains only
private fields and should not be directly accessed.
</para></refsect2>
<refsect2>
<title><anchor id="tomoe-char-new" role="function"/>tomoe_char_new ()</title>
<indexterm><primary>tomoe_char_new</primary></indexterm><programlisting><link linkend="TomoeChar">TomoeChar</link>*          tomoe_char_new                      (void);</programlisting>
<para>
Create a new <link linkend="TomoeChar"><type>TomoeChar</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="TomoeChar"><type>TomoeChar</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-new-from-xml-data" role="function"/>tomoe_char_new_from_xml_data ()</title>
<indexterm><primary>tomoe_char_new_from_xml_data</primary></indexterm><programlisting><link linkend="TomoeChar">TomoeChar</link>*          tomoe_char_new_from_xml_data        (const <link linkend="gchar">gchar</link> *data,
                                                         <link linkend="gssize">gssize</link> len);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-get-utf8" role="function"/>tomoe_char_get_utf8 ()</title>
<indexterm><primary>tomoe_char_get_utf8</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        tomoe_char_get_utf8                 (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-set-utf8" role="function"/>tomoe_char_set_utf8 ()</title>
<indexterm><primary>tomoe_char_set_utf8</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_set_utf8                 (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="char">char</link> *utf8);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>utf8</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-get-n-strokes" role="function"/>tomoe_char_get_n_strokes ()</title>
<indexterm><primary>tomoe_char_get_n_strokes</primary></indexterm><programlisting><link linkend="gint">gint</link>                tomoe_char_get_n_strokes            (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-set-n-strokes" role="function"/>tomoe_char_set_n_strokes ()</title>
<indexterm><primary>tomoe_char_set_n_strokes</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_set_n_strokes            (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="gint">gint</link> n_strokes);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_strokes</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-get-readings" role="function"/>tomoe_char_get_readings ()</title>
<indexterm><primary>tomoe_char_get_readings</primary></indexterm><programlisting>const <link linkend="GList">GList</link>*        tomoe_char_get_readings             (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-add-reading" role="function"/>tomoe_char_add_reading ()</title>
<indexterm><primary>tomoe_char_add_reading</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_add_reading              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="TomoeReading">TomoeReading</link> *reading);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reading</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-get-radicals" role="function"/>tomoe_char_get_radicals ()</title>
<indexterm><primary>tomoe_char_get_radicals</primary></indexterm><programlisting>const <link linkend="GList">GList</link>*        tomoe_char_get_radicals             (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-add-radical" role="function"/>tomoe_char_add_radical ()</title>
<indexterm><primary>tomoe_char_add_radical</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_add_radical              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *radical);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>radical</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-get-writing" role="function"/>tomoe_char_get_writing ()</title>
<indexterm><primary>tomoe_char_get_writing</primary></indexterm><programlisting><link linkend="TomoeWriting">TomoeWriting</link>*       tomoe_char_get_writing              (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-set-writing" role="function"/>tomoe_char_set_writing ()</title>
<indexterm><primary>tomoe_char_set_writing</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_set_writing              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="TomoeWriting">TomoeWriting</link> *writing);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>writing</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-get-variant" role="function"/>tomoe_char_get_variant ()</title>
<indexterm><primary>tomoe_char_get_variant</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        tomoe_char_get_variant              (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-set-variant" role="function"/>tomoe_char_set_variant ()</title>
<indexterm><primary>tomoe_char_set_variant</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_set_variant              (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *variant);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>variant</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-get-meta-data" role="function"/>tomoe_char_get_meta_data ()</title>
<indexterm><primary>tomoe_char_get_meta_data</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        tomoe_char_get_meta_data            (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *key);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-register-meta-data" role="function"/>tomoe_char_register_meta_data ()</title>
<indexterm><primary>tomoe_char_register_meta_data</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_register_meta_data       (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-has-meta-data" role="function"/>tomoe_char_has_meta_data ()</title>
<indexterm><primary>tomoe_char_has_meta_data</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tomoe_char_has_meta_data            (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-meta-data-foreach" role="function"/>tomoe_char_meta_data_foreach ()</title>
<indexterm><primary>tomoe_char_meta_data_foreach</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_char_meta_data_foreach        (<link linkend="TomoeChar">TomoeChar</link> *chr,
                                                         <link linkend="GHFunc">GHFunc</link> func,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-compare" role="function"/>tomoe_char_compare ()</title>
<indexterm><primary>tomoe_char_compare</primary></indexterm><programlisting><link linkend="gint">gint</link>                tomoe_char_compare                  (const <link linkend="TomoeChar">TomoeChar</link> *a,
                                                         const <link linkend="TomoeChar">TomoeChar</link> *b);</programlisting>
<para>
Compare to TomoeChar objects with its own utf8 character.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&nbsp;:</term>
<listitem><simpara> a TomoeChar object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&nbsp;:</term>
<listitem><simpara> a TomoeChar object to compare with.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> -1 a &lt; b, 0 a= b, 1 a &gt; b
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-char-to-xml" role="function"/>tomoe_char_to_xml ()</title>
<indexterm><primary>tomoe_char_to_xml</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              tomoe_char_to_xml                   (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="TomoeChar--n-strokes"/>The &quot;<literal>n-strokes</literal>&quot; property</title>
<indexterm><primary>TomoeChar:n-strokes</primary></indexterm><programlisting>  &quot;n-strokes&quot;                <link linkend="gint">gint</link>                  : Read / Write</programlisting>
<para>Number of strokes of the character.</para><para>Allowed values: &gt;= -1</para>
<para>Default value: -1</para>
</refsect2>
<refsect2><title><anchor id="TomoeChar--utf8"/>The &quot;<literal>utf8</literal>&quot; property</title>
<indexterm><primary>TomoeChar:utf8</primary></indexterm><programlisting>  &quot;utf8&quot;                     <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>UTF8 encoding of the character.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="TomoeChar--variant"/>The &quot;<literal>variant</literal>&quot; property</title>
<indexterm><primary>TomoeChar:variant</primary></indexterm><programlisting>  &quot;variant&quot;                  <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>Variant of the character.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="TomoeChar--writing"/>The &quot;<literal>writing</literal>&quot; property</title>
<indexterm><primary>TomoeChar:writing</primary></indexterm><programlisting>  &quot;writing&quot;                  <link linkend="TomoeWriting">TomoeWriting</link>          : Read / Write</programlisting>
<para>Writing of the character.</para></refsect2>

</refsect1>




</refentry>
