<refentry id="TomoeRecognizer">
<refmeta>
<refentrytitle role="top_of_page">TomoeRecognizer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TOMOE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TomoeRecognizer</refname>
<refpurpose>An abstract recognizer object</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="TomoeRecognizer-struct">TomoeRecognizer</link>;
<link linkend="void">void</link>                <link linkend="tomoe-recognizer-init">tomoe_recognizer_init</link>               (void);
<link linkend="void">void</link>                <link linkend="tomoe-recognizer-quit">tomoe_recognizer_quit</link>               (void);
const <link linkend="gchar">gchar</link>*        <link linkend="tomoe-recognizer-get-default-module-dir">tomoe_recognizer_get_default_module_dir</link>
                                                        (void);
<link linkend="void">void</link>                <link linkend="tomoe-recognizer-set-default-module-dir">tomoe_recognizer_set_default_module_dir</link>
                                                        (const <link linkend="gchar">gchar</link> *dir);
<link linkend="void">void</link>                <link linkend="tomoe-recognizer-load">tomoe_recognizer_load</link>               (const <link linkend="gchar">gchar</link> *base_dir);
<link linkend="TomoeModule">TomoeModule</link>*        <link linkend="tomoe-recognizer-load-module">tomoe_recognizer_load_module</link>        (const <link linkend="gchar">gchar</link> *name);
<link linkend="void">void</link>                <link linkend="tomoe-recognizer-unload">tomoe_recognizer_unload</link>             (void);
<link linkend="GList">GList</link>*              <link linkend="tomoe-recognizer-get-registered-types">tomoe_recognizer_get_registered_types</link>
                                                        (void);
<link linkend="GList">GList</link>*              <link linkend="tomoe-recognizer-get-log-domains">tomoe_recognizer_get_log_domains</link>    (void);
<link linkend="TomoeRecognizer">TomoeRecognizer</link>*    <link linkend="tomoe-recognizer-new">tomoe_recognizer_new</link>                (const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *first_property,
                                                         ...);
<link linkend="GList">GList</link>*              <link linkend="tomoe-recognizer-search">tomoe_recognizer_search</link>             (<link linkend="TomoeRecognizer">TomoeRecognizer</link> *recognizer,
                                                         <link linkend="TomoeWriting">TomoeWriting</link> *input);
const <link linkend="gchar">gchar</link>*        <link linkend="tomoe-recognizer-get-language">tomoe_recognizer_get_language</link>       (<link linkend="TomoeRecognizer">TomoeRecognizer</link> *recognizer);
<link linkend="gboolean">gboolean</link>            <link linkend="tomoe-recognizer-is-available">tomoe_recognizer_is_available</link>       (<link linkend="TomoeRecognizer">TomoeRecognizer</link> *recognizer);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----TomoeRecognizer
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="TomoeRecognizer--language">language</link>&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write / Construct Only
</synopsis>
</refsect1>



<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="TomoeRecognizer-struct" role="struct"/>TomoeRecognizer</title>
<indexterm><primary>TomoeRecognizer</primary></indexterm><programlisting>typedef struct _TomoeRecognizer TomoeRecognizer;</programlisting>
<para>
The <link linkend="TomoeRecognizer"><type>TomoeRecognizer</type></link> struct contains only
private fields and should not be directly accessed.
</para></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-init" role="function"/>tomoe_recognizer_init ()</title>
<indexterm><primary>tomoe_recognizer_init</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_recognizer_init               (void);</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-quit" role="function"/>tomoe_recognizer_quit ()</title>
<indexterm><primary>tomoe_recognizer_quit</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_recognizer_quit               (void);</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-get-default-module-dir" role="function"/>tomoe_recognizer_get_default_module_dir ()</title>
<indexterm><primary>tomoe_recognizer_get_default_module_dir</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        tomoe_recognizer_get_default_module_dir
                                                        (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-set-default-module-dir" role="function"/>tomoe_recognizer_set_default_module_dir ()</title>
<indexterm><primary>tomoe_recognizer_set_default_module_dir</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_recognizer_set_default_module_dir
                                                        (const <link linkend="gchar">gchar</link> *dir);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dir</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-load" role="function"/>tomoe_recognizer_load ()</title>
<indexterm><primary>tomoe_recognizer_load</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_recognizer_load               (const <link linkend="gchar">gchar</link> *base_dir);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>base_dir</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-load-module" role="function"/>tomoe_recognizer_load_module ()</title>
<indexterm><primary>tomoe_recognizer_load_module</primary></indexterm><programlisting><link linkend="TomoeModule">TomoeModule</link>*        tomoe_recognizer_load_module        (const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-unload" role="function"/>tomoe_recognizer_unload ()</title>
<indexterm><primary>tomoe_recognizer_unload</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_recognizer_unload             (void);</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-get-registered-types" role="function"/>tomoe_recognizer_get_registered_types ()</title>
<indexterm><primary>tomoe_recognizer_get_registered_types</primary></indexterm><programlisting><link linkend="GList">GList</link>*              tomoe_recognizer_get_registered_types
                                                        (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-get-log-domains" role="function"/>tomoe_recognizer_get_log_domains ()</title>
<indexterm><primary>tomoe_recognizer_get_log_domains</primary></indexterm><programlisting><link linkend="GList">GList</link>*              tomoe_recognizer_get_log_domains    (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-new" role="function"/>tomoe_recognizer_new ()</title>
<indexterm><primary>tomoe_recognizer_new</primary></indexterm><programlisting><link linkend="TomoeRecognizer">TomoeRecognizer</link>*    tomoe_recognizer_new                (const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *first_property,
                                                         ...);</programlisting>
<para>
Create a new <link linkend="TomoeRecognizer"><type>TomoeRecognizer</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> The name of recognizer type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>first_property</parameter>&nbsp;:</term>
<listitem><simpara> the name of the first property.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara>  the value of the first property, followed optionally by more name/value pairs, followed by NULL
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="TomoeRecognizer"><type>TomoeRecognizer</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-search" role="function"/>tomoe_recognizer_search ()</title>
<indexterm><primary>tomoe_recognizer_search</primary></indexterm><programlisting><link linkend="GList">GList</link>*              tomoe_recognizer_search             (<link linkend="TomoeRecognizer">TomoeRecognizer</link> *recognizer,
                                                         <link linkend="TomoeWriting">TomoeWriting</link> *input);</programlisting>
<para>
Match strokes of TomoeChar with TomoeWriting.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>recognizer</parameter>&nbsp;:</term>
<listitem><simpara> a TomoeRecognizer object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>input</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="TomoeWriting"><type>TomoeWriting</type></link> object for matching.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly-allocated list of
<link linkend="TomoeCandidate"><type>TomoeCandidate</type></link>. The each <link linkend="TomoeCandidate"><type>TomoeCandidate</type></link> should be also
freed with g_object_unref.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-get-language" role="function"/>tomoe_recognizer_get_language ()</title>
<indexterm><primary>tomoe_recognizer_get_language</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        tomoe_recognizer_get_language       (<link linkend="TomoeRecognizer">TomoeRecognizer</link> *recognizer);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>recognizer</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-recognizer-is-available" role="function"/>tomoe_recognizer_is_available ()</title>
<indexterm><primary>tomoe_recognizer_is_available</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tomoe_recognizer_is_available       (<link linkend="TomoeRecognizer">TomoeRecognizer</link> *recognizer);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>recognizer</parameter>&nbsp;:</term>
<listitem><simpara> a TomoeRecognizer object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the recognizer is available,
<link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="TomoeRecognizer--language"/>The &quot;<literal>language</literal>&quot; property</title>
<indexterm><primary>TomoeRecognizer:language</primary></indexterm><programlisting>  &quot;language&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write / Construct Only</programlisting>
<para>The language of the recognizer.</para><para>Default value: NULL</para>
</refsect2>

</refsect1>




</refentry>
