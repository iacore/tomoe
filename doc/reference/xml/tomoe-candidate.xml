<refentry id="TomoeCandidate">
<refmeta>
<refentrytitle role="top_of_page">TomoeCandidate</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TOMOE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TomoeCandidate</refname>
<refpurpose>An object of search results.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="TomoeCandidate-struct">TomoeCandidate</link>;
<link linkend="TomoeCandidate">TomoeCandidate</link>*     <link linkend="tomoe-candidate-new">tomoe_candidate_new</link>                 (<link linkend="TomoeChar">TomoeChar</link> *chr);
<link linkend="TomoeChar">TomoeChar</link>*          <link linkend="tomoe-candidate-get-char">tomoe_candidate_get_char</link>            (<link linkend="TomoeCandidate">TomoeCandidate</link> *cand);
<link linkend="void">void</link>                <link linkend="tomoe-candidate-set-score">tomoe_candidate_set_score</link>           (<link linkend="TomoeCandidate">TomoeCandidate</link> *cand,
                                                         <link linkend="gint">gint</link> score);
<link linkend="gint">gint</link>                <link linkend="tomoe-candidate-get-score">tomoe_candidate_get_score</link>           (<link linkend="TomoeCandidate">TomoeCandidate</link> *cand);
<link linkend="gint">gint</link>                <link linkend="tomoe-candidate-compare">tomoe_candidate_compare</link>             (const <link linkend="TomoeCandidate">TomoeCandidate</link> *a,
                                                         const <link linkend="TomoeCandidate">TomoeCandidate</link> *b);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----TomoeCandidate
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="TomoeCandidate--char">char</link>&quot;                     <link linkend="TomoeChar">TomoeChar</link>             : Read / Write / Construct Only
  &quot;<link linkend="TomoeCandidate--score">score</link>&quot;                    <link linkend="guint">guint</link>                 : Read / Write
</synopsis>
</refsect1>



<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="TomoeCandidate-struct" role="struct"/>TomoeCandidate</title>
<indexterm><primary>TomoeCandidate</primary></indexterm><programlisting>typedef struct _TomoeCandidate TomoeCandidate;</programlisting>
<para>
The <link linkend="TomoeCandidate"><type>TomoeCandidate</type></link> struct contains only
private fields and should not be directly accessed.
</para></refsect2>
<refsect2>
<title><anchor id="tomoe-candidate-new" role="function"/>tomoe_candidate_new ()</title>
<indexterm><primary>tomoe_candidate_new</primary></indexterm><programlisting><link linkend="TomoeCandidate">TomoeCandidate</link>*     tomoe_candidate_new                 (<link linkend="TomoeChar">TomoeChar</link> *chr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>chr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-candidate-get-char" role="function"/>tomoe_candidate_get_char ()</title>
<indexterm><primary>tomoe_candidate_get_char</primary></indexterm><programlisting><link linkend="TomoeChar">TomoeChar</link>*          tomoe_candidate_get_char            (<link linkend="TomoeCandidate">TomoeCandidate</link> *cand);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cand</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-candidate-set-score" role="function"/>tomoe_candidate_set_score ()</title>
<indexterm><primary>tomoe_candidate_set_score</primary></indexterm><programlisting><link linkend="void">void</link>                tomoe_candidate_set_score           (<link linkend="TomoeCandidate">TomoeCandidate</link> *cand,
                                                         <link linkend="gint">gint</link> score);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cand</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>score</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-candidate-get-score" role="function"/>tomoe_candidate_get_score ()</title>
<indexterm><primary>tomoe_candidate_get_score</primary></indexterm><programlisting><link linkend="gint">gint</link>                tomoe_candidate_get_score           (<link linkend="TomoeCandidate">TomoeCandidate</link> *cand);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cand</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tomoe-candidate-compare" role="function"/>tomoe_candidate_compare ()</title>
<indexterm><primary>tomoe_candidate_compare</primary></indexterm><programlisting><link linkend="gint">gint</link>                tomoe_candidate_compare             (const <link linkend="TomoeCandidate">TomoeCandidate</link> *a,
                                                         const <link linkend="TomoeCandidate">TomoeCandidate</link> *b);</programlisting>
<para>
Compare two TomoeCandidate.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>a</parameter>&nbsp;:</term>
<listitem><simpara> 1st TomoeCandidate object to compare.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&nbsp;:</term>
<listitem><simpara> 2nd TomoeCandidate object to compare.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> -1 a &lt; b, 0 a= b, 1 a &gt; b
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="TomoeCandidate--char"/>The &quot;<literal>char</literal>&quot; property</title>
<indexterm><primary>TomoeCandidate:char</primary></indexterm><programlisting>  &quot;char&quot;                     <link linkend="TomoeChar">TomoeChar</link>             : Read / Write / Construct Only</programlisting>
<para>A TomoeChar object.</para></refsect2>
<refsect2><title><anchor id="TomoeCandidate--score"/>The &quot;<literal>score</literal>&quot; property</title>
<indexterm><primary>TomoeCandidate:score</primary></indexterm><programlisting>  &quot;score&quot;                    <link linkend="guint">guint</link>                 : Read / Write</programlisting>
<para>Score of this candidate. Lower value has higher priority.</para><para>Allowed values: &lt;= G_MAXINT</para>
<para>Default value: 0</para>
</refsect2>

</refsect1>




</refentry>
